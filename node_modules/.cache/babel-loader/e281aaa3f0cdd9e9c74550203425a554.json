{"ast":null,"code":"import { CustomerService } from \"../../service/CustomerService\";\nimport { FETCH_CUSTOMER_REQUEST, FETCH_CUSTOMER_SUCCESS, FETCH_CUSTOMER_FAILURE } from \"./customerTypes\";\nexport const fetchCustomer = () => {\n  alert(\"fetching data from database.\");\n  return dispatch => {\n    dispatch(fetchCustomerRequest());\n    let service = new CustomerService();\n    service.findAllCustomer.then(response => {\n      const customers = response.data;\n      dispatch(fetchCustomerSuccess(customers));\n    }).catch(error => {\n      dispatch(fetchCustomerFailure(error.message));\n    });\n  };\n};\nexport const fetchCustomerRequest = () => {\n  return {\n    type: FETCH_CUSTOMER_REQUEST\n  };\n};\nexport const fetchCustomerSuccess = customers => {\n  return {\n    type: FETCH_CUSTOMER_SUCCESS,\n    payload: customers\n  };\n};\nexport const fetchCustomerFailure = error => {\n  return {\n    type: FETCH_CUSTOMER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["D:/CAPGEMINI/Module-3/ReactJs/Workspace/Automation-travel-agency/src/redux/customer/customerActions.js"],"names":["CustomerService","FETCH_CUSTOMER_REQUEST","FETCH_CUSTOMER_SUCCESS","FETCH_CUSTOMER_FAILURE","fetchCustomer","alert","dispatch","fetchCustomerRequest","service","findAllCustomer","then","response","customers","data","fetchCustomerSuccess","catch","error","fetchCustomerFailure","message","type","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,+BAAhC;AACA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,iBAJP;AAMA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjCC,EAAAA,KAAK,CAAC,8BAAD,CAAL;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,oBAAoB,EAArB,CAAR;AACA,QAAIC,OAAO,GAAG,IAAIR,eAAJ,EAAd;AACAQ,IAAAA,OAAO,CAACC,eAAR,CAAwBC,IAAxB,CAA8BC,QAAD,IAAc;AACzC,YAAMC,SAAS,GAAGD,QAAQ,CAACE,IAA3B;AACAP,MAAAA,QAAQ,CAACQ,oBAAoB,CAACF,SAAD,CAArB,CAAR;AACD,KAHD,EAIGG,KAJH,CAIUC,KAAD,IAAW;AAChBV,MAAAA,QAAQ,CAACW,oBAAoB,CAACD,KAAK,CAACE,OAAP,CAArB,CAAR;AACD,KANH;AAOD,GAVD;AAWD,CAbM;AAeP,OAAO,MAAMX,oBAAoB,GAAG,MAAM;AACxC,SAAO;AACLY,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMa,oBAAoB,GAAIF,SAAD,IAAe;AACjD,SAAO;AACLO,IAAAA,IAAI,EAAEjB,sBADD;AAELkB,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMK,oBAAoB,GAAID,KAAD,IAAW;AAC7C,SAAO;AACLG,IAAAA,IAAI,EAAEhB,sBADD;AAELiB,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { CustomerService } from \"../../service/CustomerService\";\r\nimport {\r\n  FETCH_CUSTOMER_REQUEST,\r\n  FETCH_CUSTOMER_SUCCESS,\r\n  FETCH_CUSTOMER_FAILURE,\r\n} from \"./customerTypes\";\r\n\r\nexport const fetchCustomer = () => {\r\n  alert(\"fetching data from database.\");\r\n  return (dispatch) => {\r\n    dispatch(fetchCustomerRequest());\r\n    let service = new CustomerService();\r\n    service.findAllCustomer.then((response) => {\r\n      const customers = response.data;\r\n      dispatch(fetchCustomerSuccess(customers));\r\n    })\r\n      .catch((error) => {\r\n        dispatch(fetchCustomerFailure(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchCustomerRequest = () => {\r\n  return {\r\n    type: FETCH_CUSTOMER_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchCustomerSuccess = (customers) => {\r\n  return {\r\n    type: FETCH_CUSTOMER_SUCCESS,\r\n    payload: customers,\r\n  };\r\n};\r\n\r\nexport const fetchCustomerFailure = (error) => {\r\n  return {\r\n    type: FETCH_CUSTOMER_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}