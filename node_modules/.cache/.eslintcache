[{"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\index.js":"1","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\store.js":"2","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\App.js":"3","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\rootReducer.js":"4","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\About.js":"5","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\Contact.js":"6","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\layout\\Navbar.js":"7","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\Home.js":"8","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\AddCustomer.js":"9","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\model\\Customer.js":"10","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\service\\CustomerService.js":"11","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\model\\Address.js":"12","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerReducer.js":"13","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerTypes.js":"14","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerActions.js":"15","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\DeleteCustomer.js":"16","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\ViewCustomer.js":"17","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\CheckLogin.js":"18","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\ModifyCustomer.js":"19","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\Logout.js":"20"},{"size":318,"mtime":1621323318000,"results":"21","hashOfConfig":"22"},{"size":354,"mtime":1627958942000,"results":"23","hashOfConfig":"22"},{"size":1735,"mtime":1628347361328,"results":"24","hashOfConfig":"22"},{"size":207,"mtime":1628240925552,"results":"25","hashOfConfig":"22"},{"size":169,"mtime":1608465622000,"results":"26","hashOfConfig":"22"},{"size":175,"mtime":1608465684000,"results":"27","hashOfConfig":"22"},{"size":1356,"mtime":1628347848570,"results":"28","hashOfConfig":"22"},{"size":2736,"mtime":1628256515066,"results":"29","hashOfConfig":"22"},{"size":8423,"mtime":1628349151201,"results":"30","hashOfConfig":"22"},{"size":241,"mtime":1628225040249,"results":"31","hashOfConfig":"22"},{"size":774,"mtime":1628348184380,"results":"32","hashOfConfig":"22"},{"size":74,"mtime":1628146096000,"results":"33","hashOfConfig":"22"},{"size":736,"mtime":1628229203466,"results":"34","hashOfConfig":"22"},{"size":195,"mtime":1628228471392,"results":"35","hashOfConfig":"22"},{"size":1001,"mtime":1628349424403,"results":"36","hashOfConfig":"22"},{"size":678,"mtime":1628243412995,"results":"37","hashOfConfig":"22"},{"size":2352,"mtime":1628256593052,"results":"38","hashOfConfig":"22"},{"size":3116,"mtime":1628253138477,"results":"39","hashOfConfig":"22"},{"size":7904,"mtime":1628347288853,"results":"40","hashOfConfig":"22"},{"size":324,"mtime":1628357397683,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1094ylv",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\index.js",[],["90","91"],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\store.js",["92"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\App.js",["93"],"import Navbar from \"./component/layout/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AddCustomer } from \"./component/Customer/AddCustomer\";\nimport Home from \"./component/pages/Home\";\nimport About from \"./component/pages/About\";\nimport Contact from \"./component/pages/Contact\";\nimport { DeleteCustomer } from \"./component/Customer/DeleteCustomer\";\nimport { ViewCustomer } from \"./component/Customer/ViewCustomer\";\nimport { CheckLogin, Login } from \"./component/Customer/CheckLogin\";\nimport Logout from \"./component/Customer/Logout\";\nimport { ModifyCustomer } from \"./component/Customer/ModifyCustomer\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Navbar />\n        <Switch>\n          {/* <Route exact path='/' component={Login}/> */}\n          <Route exact path='/' component={CheckLogin}/>\n          <Route exact path='/customers/logout' component={Logout}/>\n          {/* <Route exact path=\"/\" component={Home} /> */}\n          <Route exact path=\"/loginreg/about\" component={About} />\n          <Route exact path=\"/loginreg/contact\" component={Contact} />\n          <Route exact path=\"/customers/view/:id\" component={ViewCustomer} />\n          <Route exact path=\"/customers/add\" component={AddCustomer} />\n          <Route exact path=\"/customers\" component={Home} />\n          <Route\n            exact\n            path=\"/customers/modify/:id\"\n            component={ModifyCustomer}\n          />\n          <Route\n            exact\n            path=\"/customers/delete/:id\"\n            component={DeleteCustomer}\n          />\n          {/* <Route component={NotFound} /> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n\n}\n\nexport default App;\n","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\rootReducer.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\About.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\Contact.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\layout\\Navbar.js",["94"],"import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n        <a className=\"navbar-brand\">Customer Interface</a>\r\n\r\n        <div className=\"collapse navbar-collapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/customers\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/loginreg/about\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/loginreg/contact\">\r\n                Contacts\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Link to=\"/customers/add\" className=\"btn btn-outline-light mr-4\">\r\n          Add Customers\r\n        </Link>\r\n        {(sessionStorage.getItem('username')!= null)?\r\n            (\r\n            <Link className=\"btn btn-outline-danger\" to={`/customers/logout`}>Logout</Link>\r\n            )\r\n          : null\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\pages\\Home.js",["95"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCustomer } from \"../../redux/customer/customerActions\";\r\n\r\nfunction Home({ customersData, fetchCustomer }) {\r\n  useEffect(() => {\r\n    fetchCustomer();\r\n  }, []);\r\n  return customersData.loading ? (\r\n    <h2>Loading</h2>\r\n  ) : customersData.error ? (\r\n    <h2>{customersData.error}</h2>\r\n  ) : (\r\n    <div className=\"py-4\">\r\n      <table class=\"table border shadow\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Id</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Date Of Birth</th>\r\n            <th scope=\"col\">Gender</th>\r\n            {/* <th scope=\"col\">Mobile No</th> */}\r\n            {/* <th scope=\"col\">Email</th> */}\r\n            {/* <th scope=\"col\">Password</th> */}\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Pincode</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* {alert(JSON.stringify(studentsData))} */}\r\n          {customersData.customers.map((customer, index) => (\r\n            <tr>\r\n              <td>{customer.customerId}</td>\r\n              <td>{customer.firstName}</td>\r\n              <td>{customer.lastName}</td>\r\n              <td>{customer.dateOfBirth}</td>\r\n              <td>{customer.gender}</td>\r\n              {/* <td>{customer.mobileNo}</td>\r\n              <td>{customer.email}</td>\r\n              <td>{customer.password}</td> */}\r\n              <td>{customer.address.city}</td>\r\n              <td>{customer.address.pincode}</td>\r\n              <td>\r\n                <Link\r\n                  className=\"btn btn-primary mr-2\"\r\n                  to={`/customers/view/${customer.customerId}`}\r\n                >\r\n                  View\r\n                </Link>\r\n                <Link\r\n                  className=\"btn btn-outline-primary mr-2\"\r\n                  to={`/customers/modify/${customer.customerId}`}\r\n                >\r\n                  Modify\r\n                </Link>\r\n                <Link\r\n                  className=\"btn btn-outline-primary mr-2\"\r\n                  to={`/customers/delete/${customer.customerId}`}>\r\n                  Delete\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customersData: state.customers,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCustomer: () => dispatch(fetchCustomer()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\AddCustomer.js",["96","97"],"import React, { Component } from \"react\";\r\nimport { Customer } from \"../../model/Customer\";\r\nimport { CustomerService } from \"../../service/CustomerService\";\r\n\r\nexport class AddCustomer extends Component {\r\n    service = new CustomerService();\r\n      state = {\r\n        customer: new Customer(),\r\n        error: {\r\n          firstNameError: \"\",\r\n          lastNameError: \"\",\r\n          dateOfBirthError: \"\",\r\n          genderError:\"\",\r\n          mobileNoError:\"\",\r\n          emaileError:\"\",\r\n          passworderror:\"\",\r\n          cityError: \"\",\r\n          pincodeError: \"\"\r\n        }\r\n      };\r\n  \r\n    validatecustomerForm = () => {\r\n      let flag = true;\r\n      let error = {};\r\n      if (!this.state.customer.firstName) {\r\n        error.firstNameError = 'Customer First Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.lastName) {\r\n        error.lastNameError = 'Customer Last Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.dateOfBirth) {\r\n        error.dateOfBirthError = 'Customer Date Of Birth is required';\r\n        flag = false;\r\n      }\r\n      // if (!this.state.customer.gender) {\r\n      //   error.dateOfBirthError = 'Customer Gender is required';\r\n      //   flag = false;\r\n      // }\r\n      if (!this.state.customer.mobileNo) {\r\n        error. mobileNoError = 'Customer  Mobile No is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.email) {\r\n        error.emailError = 'Customer  Email is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.password) {\r\n        error. passwordError = 'Customer  Password is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.address.addressId) {\r\n        error.cityError = 'Address Id is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.address.city) {\r\n        error.cityError = 'City Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.address.pincode) {\r\n        error.pincodeError = 'Pincode is required';\r\n        flag = false;\r\n      }\r\n      this.setState({ error: error })\r\n      return flag;\r\n    }\r\n  \r\n    submitcustomerForm = (e) => {\r\n      e.preventDefault();\r\n      let isValid = this.validatecustomerForm();\r\n      \r\n      alert(isValid);\r\n      if (!isValid) {\r\n        \r\n        return false;\r\n      }\r\n  \r\n      this.service.addCustomer(this.state.customer).then((result) => {\r\n  \r\n        alert(result.data);\r\n        this.props.history.push(`/`);\r\n      }).catch((error) => {\r\n         alert(error);\r\n        //this.setState({ error: { invalidCredential: 'Invalid credential' } })\r\n      });\r\n    }\r\n  \r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2><span className=\"badge badge-primary\">customer Form</span></h2>\r\n          <form onSubmit={this.submitcustomerForm}>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.firstNameError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter Customer First Name\"\r\n                value={this.state.customer.firstName}\r\n                onChange={(e) => {\r\n                  this.setState({ customer: { ...this.state.customer, firstName: e.target.value } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.lastNameError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                placeholder=\"Enter customer Last Name\"\r\n                value={this.state.customer.lastName}\r\n                onChange={(e) => {\r\n                  this.setState({ customer: { ...this.state.customer, lastName: e.target.value } });\r\n                }}\r\n              />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.dateOfBirthError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"Date\"\r\n                id=\"dateOfBirth\"\r\n                placeholder=\"Enter customer Date Of Birth\"\r\n                value={this.state.customer.dateOfBirth}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, dateOfBirth: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.genderError}</div>\r\n              <select id = \"gender\" className=\"select\" onChange={(e) => this.setState({ customer: { ...this.state.customer, gender: e.target.value } })}>  \r\n                <option> ---Choose Gender--- </option>  \r\n                <option> MALE </option> \r\n                <option> FEMALE </option> \r\n                </select>  \r\n              {/* <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"geder\"\r\n                placeholder=\"Enter customer Gender\"\r\n                value={this.state.customer.gender}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, gender: e.target.value } })} /> */}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.mobileNo}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"mobileNo\"\r\n                placeholder=\"Enter customer Mobile No\"\r\n                value={this.state.customer.mobileNo}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, mobileNo: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.email}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n                placeholder=\"Enter customer email\"\r\n                value={this.state.customer.email}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, email: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.password}</div>\r\n              <input className=\"form-control\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter customer password\"\r\n                value={this.state.customer.password}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, password: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.cityError}</div>\r\n              <input className=\"form-control\" type=\"text\" id=\"Id\"\r\n                placeholder=\"Enter Address Id\"\r\n                value={this.state.customer.address.addressId}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, address: { ...this.state.customer.address, addressId: e.target.value } } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.cityError}</div>\r\n              <input className=\"form-control\" type=\"text\" id=\"city\"\r\n                placeholder=\"Enter City\"\r\n                value={this.state.customer.address.city}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, address: { ...this.state.customer.address, city: e.target.value } } })} />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.pincodeError}</div>\r\n              <input className=\"form-control\" type=\"text\" id=\"pincode\" placeholder=\"Enter Pincode\"\r\n                value={this.state.customer.address.pincode}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, address: { ...this.state.customer.address, pincode: e.target.value } } })} />\r\n            </div>\r\n  \r\n            <div className='form-group'>\r\n              <div className='alert-danger'>{this.state.error.invalidCredential}</div>\r\n            </div>\r\n  \r\n            <button className=\"btn btn-outline-primary\" >Add customer</button>\r\n            <hr />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\model\\Customer.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\service\\CustomerService.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\model\\Address.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerReducer.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerTypes.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\redux\\customer\\customerActions.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\DeleteCustomer.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\ViewCustomer.js",[],"D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\CheckLogin.js",["98"],"import React, { Component } from \"react\";\r\nimport { CustomerService } from \"../../service/CustomerService\";\r\nimport { Customer } from \"../../model/Customer\";\r\n\r\nexport class CheckLogin extends Component{\r\n    service = new CustomerService();\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            customer: new Customer,\r\n            error:{\r\n                usernameError:'',\r\n                passwordError:''\r\n            }\r\n        }\r\n    }\r\n    validateLoginForm(){\r\n        let flag = true;\r\n        let error = {};\r\n        if(!this.state.customer.email){\r\n            error.usernameError = \"Username is Required\";\r\n            flag = false;\r\n        }\r\n        if(!this.state.customer.password){\r\n            flag = false;\r\n            error.passwordError = \"Password is Required\";\r\n        }\r\n        this.setState({error: error})\r\n        return flag;\r\n    }\r\n    submitLoginForm = (e) =>{\r\n        e.preventDefault();\r\n        let isValid = this.validateLoginForm();\r\n        if(!isValid){\r\n            return false;\r\n        }\r\n        // Read form values and give it to LoginService\r\n        this.service.CheckLogin(this.state.customer).then((result)=>{\r\n            alert(result.data);\r\n            sessionStorage.setItem('username',this.state.customer.email);\r\n            this.props.history.push('/customers');\r\n        }).catch((error)=>{\r\n            this.setState({ error : {invalidCredential: 'Invalid Credential'}})\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={ this.submitLoginForm }>\r\n                <h1>\r\n                    <span className=\"badge badge-dark\">Login</span>\r\n                </h1>\r\n                <div className=\"form-group mr2\">\r\n                    <div className=\"alert-danger\">{this.state.error.usernameError}</div>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"username\"\r\n                        placeholder=\"Enter Username\"\r\n                        value={this.state.customer.email}\r\n                        onChange={(e)=> this.setState({customer:{...this.state.customer, email: e.target.value}})}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert-danger\">{this.state.error.passwordError}</div>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={this.state.customer.password}\r\n                        onChange={(e)=> this.setState({customer:{...this.state.customer, password: e.target.value}})}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert-danger\">{this.state.error.invalidCredential}</div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n} ","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\ModifyCustomer.js",["99","100"],"import React, { Component } from \"react\";\r\nimport { Customer } from \"../../model/Customer\";\r\nimport { CustomerService } from \"../../service/CustomerService\";\r\n\r\nexport class ModifyCustomer extends Component {\r\n    service = new CustomerService();\r\n      state = {\r\n        customer: new Customer(),\r\n        error: {\r\n          firstNameError: \"\",\r\n          lastNameError: \"\",\r\n          dateOfBirthError: \"\",\r\n          genderError:\"\",\r\n          mobileNoError:\"\",\r\n          emaileError:\"\",\r\n          passworderror:\"\",\r\n          cityError: \"\",\r\n          pincodeError: \"\"\r\n        }\r\n      };\r\n      componentDidMount(){\r\n        this.service.findCutstomerById(this.props.match.params.id)\r\n        .then((result) => {\r\n          this.setState({ customer: result.data });\r\n        })\r\n        .catch((error) => {\r\n            alert(JSON.stringify(\"error: \" + error));\r\n        });\r\n      }\r\n  \r\n    validatecustomerForm = () => {\r\n      let flag = true;\r\n      let error = {};\r\n      if (!this.state.customer.firstName) {\r\n        error.firstNameError = 'Customer First Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.lastName) {\r\n        error.lastNameError = 'Customer Last Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.dateOfBirth) {\r\n        error.dateOfBirthError = 'Customer Date Of Birth is required';\r\n        flag = false;\r\n      }\r\n      // if (!this.state.customer.gender) {\r\n      //   error.dateOfBirthError = 'Customer Gender is required';\r\n      //   flag = false;\r\n      // }\r\n      if (!this.state.customer.mobileNo) {\r\n        error. mobileNoError = 'Customer  Mobile No is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.email) {\r\n        error.emailError = 'Customer  Email is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.password) {\r\n        error. passwordError = 'Customer  Password is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.address.city) {\r\n        error.cityError = 'City Name is required';\r\n        flag = false;\r\n      }\r\n      if (!this.state.customer.address.pincode) {\r\n        error.pincodeError = 'Pincode is required';\r\n        flag = false;\r\n      }\r\n      this.setState({ error: error })\r\n      return flag;\r\n    }\r\n  \r\n    submitcustomerForm = (e) => {\r\n      e.preventDefault();\r\n      let isValid = this.validatecustomerForm();\r\n      \r\n      alert(isValid);\r\n      if (!isValid) {\r\n        \r\n        return false;\r\n      }\r\n      this.service.ModifyCustomer(this.state.customer).then(() => {}).catch(() => {});\r\n    // redirect you to Home component after adding user\r\n    this.props.history.push(\"/customers\");\r\n    }\r\n    \r\n  \r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h2><span className=\"badge badge-primary\">customer Form</span></h2>\r\n          <form onSubmit={this.submitcustomerForm}>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.firstNameError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter Customer First Name\"\r\n                value={this.state.customer.firstName}\r\n                onChange={(e) => {\r\n                  this.setState({ customer: { ...this.state.customer, firstName: e.target.value } });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.lastNameError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                placeholder=\"Enter customer Last Name\"\r\n                value={this.state.customer.lastName}\r\n                onChange={(e) => {\r\n                  this.setState({ customer: { ...this.state.customer, lastName: e.target.value } });\r\n                }}\r\n              />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.dateOfBirthError}</div>\r\n              <input className=\"form-control\"\r\n                type=\"Date\"\r\n                id=\"dateOfBirth\"\r\n                placeholder=\"Enter customer Date Of Birth\"\r\n                value={this.state.customer.dateOfBirth}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, dateOfBirth: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.genderError}</div>\r\n              <select id = \"gender\" className=\"select\">  \r\n                <option> ---Choose Gender--- </option>  \r\n                <option> MALE </option> \r\n                <option> FEMALE </option> \r\n                </select>  \r\n              {/* <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"geder\"\r\n                placeholder=\"Enter customer Gender\"\r\n                value={this.state.customer.gender}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, gender: e.target.value } })} /> */}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.mobileNo}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"mobileNo\"\r\n                placeholder=\"Enter customer Mobile No\"\r\n                value={this.state.customer.mobileNo}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, mobileNo: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.email}</div>\r\n              <input className=\"form-control\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n                placeholder=\"Enter customer email\"\r\n                value={this.state.customer.email}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, email: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.password}</div>\r\n              <input className=\"form-control\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter customer password\"\r\n                value={this.state.customer.password}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, password: e.target.value } })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.cityError}</div>\r\n              <input className=\"form-control\" type=\"text\" id=\"city\"\r\n                placeholder=\"Enter City\"\r\n                value={this.state.customer.address.city}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, address: { ...this.state.customer.address, city: e.target.value } } })} />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <div className='alert-danger'>{this.state.error.pincodeError}</div>\r\n              <input className=\"form-control\" type=\"text\" id=\"pincode\" placeholder=\"Enter Pincode\"\r\n                value={this.state.customer.address.pincode}\r\n                onChange={(e) => this.setState({ customer: { ...this.state.customer, address: { ...this.state.customer.address, pincode: e.target.value } } })} />\r\n            </div>\r\n  \r\n            <div className='form-group'>\r\n              <div className='alert-danger'>{this.state.error.invalidCredential}</div>\r\n            </div>\r\n  \r\n            <button className=\"btn btn-outline-primary\">Modify customer</button>\r\n            <hr />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }","D:\\CAPGEMINI\\Module-3\\ReactJs\\Workspace\\Automation-travel-agency\\src\\component\\Customer\\Logout.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":9,"column":22,"nodeType":"107","messageId":"108","endLine":9,"endColumn":27},{"ruleId":"110","severity":1,"message":"111","line":8,"column":9,"nodeType":"112","endLine":8,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":9,"column":6,"nodeType":"115","endLine":9,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":42,"column":9,"nodeType":"119","messageId":"120","endLine":42,"endColumn":29,"fix":"121"},{"ruleId":"117","severity":1,"message":"122","line":50,"column":9,"nodeType":"119","messageId":"120","endLine":50,"endColumn":29,"fix":"123"},{"ruleId":"124","severity":1,"message":"125","line":10,"column":23,"nodeType":"126","messageId":"127","endLine":10,"endColumn":35,"fix":"128"},{"ruleId":"117","severity":1,"message":"118","line":51,"column":9,"nodeType":"119","messageId":"120","endLine":51,"endColumn":29,"fix":"129"},{"ruleId":"117","severity":1,"message":"122","line":59,"column":9,"nodeType":"119","messageId":"120","endLine":59,"endColumn":29,"fix":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCustomer'. Either include it or remove the dependency array. If 'fetchCustomer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["133"],"no-whitespace-before-property","Unexpected whitespace before property mobileNoError.","MemberExpression","unexpectedWhitespace",{"range":"134","text":"135"},"Unexpected whitespace before property passwordError.",{"range":"136","text":"135"},"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"137","text":"138"},{"range":"139","text":"135"},{"range":"140","text":"135"},"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},[1327,1329],".",[1602,1604],[339,339],"()",[1626,1628],[1901,1903],"Update the dependencies array to be: [fetchCustomer]",{"range":"143","text":"144"},[297,299],"[fetchCustomer]"]